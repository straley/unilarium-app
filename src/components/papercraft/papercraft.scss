@import '../../site.scss';

// main settings
* {
  font-family: 'Roboto', sans-serif;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
}

// default vars
$papercraft-header-height: 64px !default;
$papercraft-header-background-color: #666 !default;
$papercraft-header-color: #fff !default;
$papercraft-header-font-size: 18px !default;
$papercraft-nav-background-color: #f6f6f6 !default;
$papercraft-nav-color: #000 !default;
$papercraft-contents-background-color: #fafafa !default;
$papercraft-contents-color: #000 !default;
$papercraft-expansion-panel-label-width: 70px !default;

$z-index-base: 0;
$z-index-card: 200;
$z-index-app-bar: 400;
$z-index-nav: 800;
$z-index-subnav: 900;
$z-index-drawer: 1600;
$z-index-dialog: 2400;

@function sqrt($r) {
  $x0: 1;
  $x1: $x0;
  @for $i from 1 through 10 {
    $x1: $x0 - ($x0 * $x0 - abs($r)) / (2 * $x0);
    $x0: $x1;
  }
  @return $x1;
}

// material breakpoints
// from https://material.io/guidelines/layout/responsive-ui.html#responsive-ui-breakpoints
@mixin if-width($class) {
  @if $class == xsmall { @media (max-width: 599px) { @content; } }
  @else if $class == small { @media (min-width: 600px) { @content; } }
  @else if $class == medium { @media (min-width: 960px) { @content; } }
  @else if $class == large { @media (min-width: 1280px) { @content; } }
  @else if $class == xlarge { @media (min-width: 1920px) { @content; } }
  @else { @warn "invalid breakpoint"; }
}

// set a property for various sizes, larger sizes default to immediate smaller
@mixin size-property(
  $property,
  $xsmall,
  $small:$xsmall,
  $medium:$small,
  $large:$medium,
  $xlarge:$large
) {
  @include if-width(xsmall) { #{$property}: $xsmall; }
  @include if-width(small) { #{$property}: $small; }
  @include if-width(medium) { #{$property}: $medium; }
  @include if-width(large) { #{$property}: $large; }
  @include if-width(xlarge) { #{$property}: $xlarge; }
}

// set depth shadow
@mixin depth-shadow($dp) {
  box-shadow: 0 ($dp*0.8)*1px ($dp*1.4)*1px ($dp/10)*1px rgba(0, 0, 0, .10),
              0 ($dp*0.4)*1px ($dp*1.8)*1px ($dp/12)*1px rgba(0, 0, 0, .08),
              0 ((sqrt($dp)*1.3)+1)*1px (($dp*1.3))*1px ((sqrt($dp)*0.5)+1)*-1px rgba(0, 0, 0, .15);
}
